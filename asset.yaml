# BUCKET - Firebase Notification
apiVersion: bucket/v1
kind: Schema
metadata:
  name: firebase-notification-bucket
spec:
  title: Firebase Notification
  description: You can send a push notification by adding new entry to this bucket.
  acl:
    write: true==true
    read: true==true
  properties:
    title:
      type: string
      description: Add a title to your push notification
      options:
        position: left
      title: title
    body:
      type: string
      description: Push notification content
      options:
        position: left
      title: body
    topic:
      type: string
      description: You can add a topic to send push notifications to multiple users
      options:
        position: right
      title: topic
    token:
      type: string
      description: You can add a token to send push notifications to a user
      options:
        position: right
      title: token
    data:
      type: string
      title: data
      description: Description of the data input
      options:
        position: bottom
    tag:
      type: string
      title: tag
      description: Description of the tag input
      options:
        position: bottom
    created_at:
      type: date
      title: created_at
      description: Description of the created_at input
      options:
        position: bottom
      default: :created_at
  primary: title
  icon: outbond
  order: 0
  history: false
  documentSettings:
    countLimit: 2000
    limitExceedBehaviour: remove
---
# BUCKET - Activity
apiVersion: bucket/v1
kind: Schema
metadata:
  name: activity-bucket
spec:
  title: Activity
  description: Describe your new bucket
  icon: view_stream
  primary: action
  readOnly: false
  history: false
  properties:
    action:
      type: string
      title: action
      description: Description of the action input
      options:
        position: bottom
      enum:
        - like
        - comment
        - follow_post
        - follow_user
        - tag_in_post
        - tag_in_comment
        - re_post
    owner:
      type: relation
      title: owner
      description: Description of the owner input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      primary: username
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    user:
      type: relation
      title: user
      description: Description of the user input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      primary: username
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    post:
      type: relation
      title: post
      description: Description of the post input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      primary: text
      bucket:
        resourceFieldRef:
          schemaName: post-bucket
    metadata:
      type: string
      title: metadata
      description: Description of the metadata input
      options:
        position: bottom
    created_at:
      type: date
      title: created_at
      description: Description of the created_at input
      options:
        position: bottom
      default: :created_at
  acl:
    write: true==true
    read: true==true
  order: 1
---
# BUCKET - User
apiVersion: bucket/v1
kind: Schema
metadata:
  name: user-bucket
spec:
  title: User
  description: Describe your new bucket
  icon: view_stream
  primary: username
  readOnly: false
  history: false
  properties:
    identity:
      type: string
      title: identity
      description: Description of the identity input
      options:
        position: bottom
    username:
      type: string
      title: username
      description: Description of the username input
      options:
        position: bottom
    thumbnail:
      type: storage
      title: thumbnail
      description: Description of the thumbnail input
      options:
        position: bottom
    email:
      type: string
      title: email
      description: Description of the email input
      options:
        position: bottom
    name:
      type: string
      title: name
      description: Description of the name input
      options:
        position: bottom
    surname:
      type: string
      title: surname
      description: Description of the surname input
      options:
        position: bottom
    fcm_token:
      type: string
      title: fcm_token
      description: Description of the fcm_token input
      options:
        position: bottom
    headline:
      type: textarea
      title: headline
      description: Description of the headline input
      options:
        position: bottom
    last_online_date:
      type: date
      title: last_online_date
      description: Description of the last_online_date input
      options:
        position: bottom
      default: :created_at
    notification:
      type: boolean
      title: notification
      description: Description of the notification input
      options:
        position: bottom
      default: true
    timezone:
      type: number
      title: timezone
      description: Description of the timezone input (min)
      options:
        position: bottom
      default: 0
    visibility:
      type: string
      title: visibility
      description: Description of the visibility input
      options:
        position: bottom
      enum:
        - public
        - private
      default: public
    created_at:
      type: date
      title: created_at
      description: Description of the created_at input
      options:
        position: bottom
      readOnly: false
      default: :created_at
  acl:
    write: true==true
    read: true==true
  order: 2
  required:
    - username
---
# BUCKET - Post
apiVersion: bucket/v1
kind: Schema
metadata:
  name: post-bucket
spec:
  title: Post
  description: Describe your new bucket
  icon: view_stream
  primary: text
  readOnly: false
  history: false
  properties:
    text:
      type: textarea
      title: text
      description: Description of the text input
      options:
        position: left
    user:
      type: relation
      title: user
      description: Description of the user input
      options:
        position: right
      relationType: onetoone
      dependent: false
      primary: username
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    tags:
      type: relation
      title: tags
      description: Description of the tags input
      options:
        position: right
      relationType: onetomany
      dependent: false
      primary: username
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    visibility:
      type: string
      title: visibility
      description: Description of the visibility input
      options:
        position: right
      enum:
        - public
        - tagged_users
      default: public
    created_at:
      type: date
      title: created_at
      description: Description of the created_at input
      options:
        position: right
      default: :created_at
    event_date:
      type: date
      title: event_date
      description: Description of the event_date input
      options:
        position: right
    like_count:
      type: number
      title: like_count
      description: Description of the like_count input
      options:
        position: bottom
      minimum: 0
      default: 0
    comment_count:
      type: number
      title: comment_count
      description: Description of the comment_count input
      options:
        position: bottom
      minimum: 0
      default: 0
    post:
      type: relation
      title: post
      description: Description of the post input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      primary: text
      bucket:
        resourceFieldRef:
          schemaName: post-bucket
    hashtags:
      type: relation
      title: hashtags
      description: Description of the hashtags input
      options:
        position: bottom
      relationType: onetomany
      dependent: false
      primary: hashtag
      bucket:
        resourceFieldRef:
          schemaName: hashtag-bucket
    file:
      type: object
      title: file
      description: Description of the file input
      options:
        position: bottom
      properties:
        url:
          type: string
          title: url
          description: Description of the url input
          options:
            position: bottom
        mimetype:
          type: string
          title: mimetype
          description: Description of the mimetype input
          options:
            position: bottom
  acl:
    write: true==true
    read: |-
      auth.attributes.role!="user"||
      document.visibility=="public"||
      (document.visibility=="tagged_users" &&
      (some(document.tags.identity, [auth._id]) ||
       document.user.identity==auth._id))
  order: 3
---
# BUCKET - Waiting Request
apiVersion: bucket/v1
kind: Schema
metadata:
  name: waiting-request-bucket
spec:
  title: Waiting Request
  description: Describe your new bucket
  icon: view_stream
  primary: request_id
  readOnly: false
  history: false
  properties:
    request_id:
      type: string
      title: request_id
      description: Description of the request_id input
      options:
        position: bottom
    sender:
      type: relation
      title: sender
      description: Description of the sender input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      primary: username
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    reciever:
      type: relation
      title: reciever
      description: Description of the reciever input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      primary: username
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    created_at:
      type: date
      title: created_at
      description: Description of the created_at input
      options:
        position: bottom
      default: :created_at
  acl:
    write: true==true
    read: true==true
  order: 4
---
# BUCKET - Blocked User
apiVersion: bucket/v1
kind: Schema
metadata:
  name: blocked-user-bucket
spec:
  title: Blocked User
  description: Describe your new bucket
  icon: view_stream
  primary: title
  readOnly: false
  history: false
  properties:
    title:
      type: string
      title: title
      description: Title of the row
      options:
        position: left
    blocking:
      type: relation
      title: blocking
      description: Description of the blocking input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      primary: username
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    blocked:
      type: relation
      title: blocked
      description: Description of the blocked input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      primary: username
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    created_at:
      type: date
      title: created_at
      description: Description of the created_at input
      options:
        position: bottom
      default: :created_at
  acl:
    write: true==true
    read: true==true
  order: 5
---
# BUCKET - Liked Post
apiVersion: bucket/v1
kind: Schema
metadata:
  name: liked-post-bucket
spec:
  title: Liked Post
  description: Describe your new bucket
  icon: view_stream
  primary: like_id
  readOnly: false
  history: false
  properties:
    like_id:
      type: string
      title: like_id
      description: Description of the like_id input
      options:
        position: bottom
        translate: false
    user:
      type: relation
      title: user
      description: Description of the user input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    post:
      type: relation
      title: post
      description: Description of the post input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      bucket:
        resourceFieldRef:
          schemaName: post-bucket
    created_at:
      type: date
      title: created_at
      description: Description of the created_at input
      options:
        position: bottom
      default: :created_at
  acl:
    write: true==true
    read: true==true
  order: 7
---
# BUCKET - Notification
apiVersion: bucket/v1
kind: Schema
metadata:
  name: notification-bucket
spec:
  title: Notification
  description: Describe your new bucket
  icon: view_stream
  primary: message
  readOnly: false
  history: false
  properties:
    message:
      type: string
      title: message
      description: Description of the message input
      options:
        position: left
    user:
      type: relation
      title: user
      description: Description of the user input
      options:
        position: left
      relationType: onetoone
      dependent: false
      primary: username
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    post:
      type: relation
      title: post
      description: Description of the post input
      options:
        position: right
      relationType: onetoone
      dependent: false
      primary: text
      bucket:
        resourceFieldRef:
          schemaName: post-bucket
    created_at:
      type: date
      title: created_at
      description: Description of the created_at input
      options:
        position: right
      readOnly: false
      default: :created_at
    send_date:
      type: date
      title: send_date
      description: Description of the send_date input
      options:
        position: right
    data:
      type: string
      title: data
      description: Description of the data input
      options:
        position: bottom
  acl:
    write: true==true
    read: true==true
  order: 10
---
# BUCKET - Follower & Following
apiVersion: bucket/v1
kind: Schema
metadata:
  name: follower-&-following-bucket
spec:
  title: Follower & Following
  description: Describe your new bucket
  icon: view_stream
  primary: title
  readOnly: false
  history: false
  properties:
    title:
      type: string
      title: title
      description: Title of the row
      options:
        position: left
    follower:
      type: relation
      title: follower
      description: Description of the follower input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    following:
      type: relation
      title: following
      description: Description of the following input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    date:
      type: date
      title: date
      description: Description of the date input
      options:
        position: bottom
      default: :created_at
  acl:
    write: true==true
    read: true==true
  order: 11
---
# BUCKET - Chat
apiVersion: bucket/v1
kind: Schema
metadata:
  name: chat-bucket
spec:
  title: Chat
  description: Describe your new bucket
  icon: view_stream
  primary: name
  readOnly: false
  history: false
  properties:
    name:
      type: string
      title: name
      description: Description of the name input
      options:
        position: left
    created_at:
      type: date
      title: created_at
      description: Description of the created_at input
      options:
        position: left
      default: :created_at
    last_active:
      type: array
      title: last_active
      description: Description of the last_active input
      options:
        position: right
      items:
        title: Last Active Time
        type: object
        properties:
          date:
            type: date
            title: date
            description: Description of the date input
            options:
              position: bottom
            default: :created_at
          user:
            type: relation
            title: user
            description: Description of the user input
            options:
              position: bottom
            relationType: onetoone
            dependent: false
            bucket:
              resourceFieldRef:
                schemaName: user-bucket
          unread_messages_count:
            type: number
            title: unread_messages_count
            description: Description of the unread_messages_count input
            options:
              position: bottom
            default: 0
          status:
            type: string
            title: status
            description: Description of the status input
            options:
              position: bottom
            enum:
              - active
              - deleted
              - requested
            default: active
    last_message:
      type: string
      title: last_message
      description: Description of the last_message input
      options:
        position: left
    last_message_time:
      type: date
      title: last_message_time
      description: Description of the last_message_time input
      options:
        position: left
    last_message_owner:
      type: relation
      title: last_message_owner
      description: Description of the last_message_owner input
      options:
        position: left
      relationType: onetoone
      dependent: false
      primary: username
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    is_group:
      type: boolean
      title: is_group
      description: Description of the is_group input
      options:
        position: bottom
      default: false
    image:
      type: storage
      title: image
      description: Description of the image input
      options:
        position: bottom
    managers:
      type: relation
      title: managers
      description: Description of the managers input
      options:
        position: bottom
      relationType: onetomany
      dependent: false
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
  acl:
    write: true==true
    read: true==true
  order: 12
---
# BUCKET - Message
apiVersion: bucket/v1
kind: Schema
metadata:
  name: message-bucket
spec:
  title: Message
  description: Describe your new bucket
  icon: view_stream
  primary: message
  readOnly: false
  history: false
  properties:
    message:
      type: string
      title: message
      description: Description of the message input
      options:
        position: bottom
    created_at:
      type: date
      title: created_at
      description: Description of the created_at input
      options:
        position: bottom
      default: :created_at
    owner:
      type: relation
      title: owner
      description: Description of the owner input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      primary: username
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    chat:
      type: relation
      title: chat
      description: Description of the chat input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      primary: name
      bucket:
        resourceFieldRef:
          schemaName: chat-bucket
    image:
      type: storage
      title: image
      description: Description of the image input
      options:
        position: bottom
  acl:
    write: true==true
    read: true==true
  order: 13
---
# BUCKET - Comment
apiVersion: bucket/v1
kind: Schema
metadata:
  name: comment-bucket
spec:
  title: Comment
  description: Describe your new bucket
  icon: view_stream
  primary: comment
  readOnly: false
  history: false
  properties:
    comment:
      type: string
      title: comment
      description: Description of the comment input
      options:
        position: left
    post:
      type: relation
      title: post
      description: Description of the post input
      options:
        position: right
      relationType: onetoone
      dependent: false
      primary: text
      bucket:
        resourceFieldRef:
          schemaName: post-bucket
    user:
      type: relation
      title: user
      description: Description of the user input
      options:
        position: right
      relationType: onetoone
      dependent: false
      primary: username
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    date:
      type: date
      title: date
      description: Description of the date input
      options:
        position: left
      default: :updated_at
    hastags:
      type: relation
      title: hastags
      description: Description of the hastags input
      options:
        position: left
      relationType: onetomany
      dependent: false
      bucket:
        resourceFieldRef:
          schemaName: hashtag-bucket
    tags:
      type: relation
      title: tags
      description: Description of the tags input
      options:
        position: right
      relationType: onetomany
      dependent: false
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
  acl:
    write: true==true
    read: true==true
  order: 14
---
# BUCKET - Hashtag
apiVersion: bucket/v1
kind: Schema
metadata:
  name: hashtag-bucket
spec:
  title: Hashtag
  description: Describe your new bucket
  icon: view_stream
  primary: hashtag
  readOnly: false
  history: false
  properties:
    hashtag:
      type: string
      title: hashtag
      description: Description of the hashtag input
      options:
        position: bottom
    times_used:
      type: number
      title: times_used
      description: Description of the times_used input
      options:
        position: bottom
      minimum: 0
    created_at:
      type: date
      title: created_at
      description: Description of the created_at input
      options:
        position: bottom
      default: :created_at
  acl:
    write: true==true
    read: true==true
  order: 15
  required: []
---
# BUCKET - Reported Post
apiVersion: bucket/v1
kind: Schema
metadata:
  name: reported-post-bucket
spec:
  title: Reported Post
  description: Describe your new bucket
  icon: view_stream
  primary: title
  readOnly: false
  history: false
  properties:
    title:
      type: string
      title: title
      description: Title of the row
      options:
        position: left
    user:
      type: relation
      title: user
      description: Description of the user input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      bucket:
        resourceFieldRef:
          schemaName: user-bucket
    post:
      type: relation
      title: post
      description: Description of the post input
      options:
        position: bottom
      relationType: onetoone
      dependent: false
      bucket:
        resourceFieldRef:
          schemaName: post-bucket
    created_at:
      type: date
      title: created_at
      description: Description of the created_at input
      options:
        position: bottom
      default: :created_at
  acl:
    write: true==true
    read: true==true
  order: 17
---
# API KEY
apiVersion: passport/v1
kind: ApiKey
metadata:
  name: identity-apikey
spec:
  name: Identity Apikey
  policies:
    - IdentityFullAccess
---
# API KEY
apiVersion: passport/v1
kind: ApiKey
metadata:
  name: secret-apikey
spec:
  name: Secret Apikey
  policies:
    - ApiKeyFullAccess
    - IdentityFullAccess
    - PolicyFullAccess
    - StrategyFullAccess
    - PassportFullAccess
    - ActivityFullAccess
    - StorageFullAccess
    - WebhookFullAccess
    - FunctionFullAccess
    - DashboardFullAccess
    - BucketFullAccess
    - PreferenceFullAccess
---
# FUNCTION - Exploring Facade
apiVersion: function/v1
kind: Function
metadata:
  name: exploring-facade-function
spec:
  description: All exploring posts and users are served via this function.
  language: javascript
  timeout: 51
  environment:
    - name: USERS_BUCKET
      valueFrom:
        resourceFieldRef:
          schemaName: user-bucket
    - name: LIKED_BUCKET
      valueFrom:
        resourceFieldRef:
          schemaName: liked-post-bucket
    - name: NO_DEVKIT_DATABASE_WARNING
      value: "TRUE"
    - name: FOLLOWERS_BUCKET
      valueFrom:
        resourceFieldRef:
          schemaName: follower-&-following-bucket
    - name: COMMENT_BUCKET
      valueFrom:
        resourceFieldRef:
          schemaName: comment-bucket
    - name: POST_BUCKET
      valueFrom:
        resourceFieldRef:
          schemaName: post-bucket
    - name: IDENTITY_APIKEY
      valueFrom:
        resourceFieldRef:
          apiKeyName: identity-apikey
    - name: BLOCKED_USER_BUCKET
      valueFrom:
        resourceFieldRef:
          schemaName: blocked-user-bucket
  dependency:
    - name: "@spica-devkit/database"
      version: ^0.9.8
    - name: "@spica-devkit/identity"
      version: ^0.9.8
  title: Exploring Facade
  code: ./function/exploring-facade-function.js
  runtime:
    name: Node
    language: Javascript
---
# FUNCTION - Firebase Push Notification
apiVersion: function/v1
kind: Function
metadata:
  name: firebase-push-notification-function
spec:
  description: Firebase push notification logic
  language: javascript
  timeout: 61
  environment:
    - name: PROJECT_ID
      value: ""
    - name: PRIVATE_KEY_ID
      value: ""
    - name: PRIVATE_KEY
      value: ""
    - name: CLIENT_EMAIL
      value: ""
    - name: CLIENT_ID
      value: ""
    - name: AUTH_URI
      value: ""
    - name: TOKEN_URI
      value: ""
    - name: AUTH_PROVIDER_X509_CERT_URL
      value: ""
    - name: CLIENT_X509_CERT_URL
      value: ""
  dependency:
    - name: firebase-admin
      version: ^9.11.1
  title: Firebase Push Notification
  code: ./function/firebase-push-notification-function.js
  runtime:
    name: Node
    language: Javascript
---
# FUNCTION - Authorization
apiVersion: function/v1
kind: Function
metadata:
  name: authorization-function
spec:
  description: auth operation
  language: javascript
  timeout: 120
  environment:
    - name: IDENTITIY_SECRET_KEY
      valueFrom:
        resourceFieldRef:
          apiKeyName: identity-apikey
    - name: SECRET_API_KEY
      valueFrom:
        resourceFieldRef:
          apiKeyName: secret-apikey
    - name: USER_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: user-bucket
    - name: USER_POLICY_ID
      value: ""
    - name: LIKED_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: liked-post-bucket
    - name: NOTIFICATION_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: notification-bucket
    - name: COMMENTS_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: comment-bucket
    - name: POSTS_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: post-bucket
    - name: ACTIVITIES_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: activity-bucket
    - name: FOLLOWING_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: follower-&-following-bucket
    - name: CHATS_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: chat-bucket
    - name: MESSAGES_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: message-bucket
  dependency:
    - name: "@spica-devkit/bucket"
      version: ^0.9.8
    - name: "@spica-devkit/database"
      version: ^0.9.8
    - name: "@spica-devkit/identity"
      version: ^0.9.8
    - name: "@spica-devkit/storage"
      version: ^0.9.9
    - name: node-fetch
      version: ^3.0.0
  title: Authorization
  code: ./function/authorization-function.js
  runtime:
    name: Node
    language: Javascript
---
# FUNCTION - SendNotification
apiVersion: function/v1
kind: Function
metadata:
  name: sendnotification-function
spec:
  description: send notification with schedule
  language: javascript
  timeout: 62
  environment:
    - name: NOTIFICATION_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: notification-bucket
    - name: FIREBASE_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: firebase-notification-bucket
    - name: USER_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: user-bucket
    - name: SECRET_API_KEY
      valueFrom:
        resourceFieldRef:
          apiKeyName: secret-apikey
    - name: NO_DEVKIT_DATABASE_WARNING
      value: "TRUE"
  dependency:
    - name: "@spica-devkit/bucket"
      version: ^0.9.8
    - name: "@spica-devkit/database"
      version: ^0.9.8
  title: SendNotification
  code: ./function/sendnotification-function.js
  runtime:
    name: Node
    language: Javascript
---
# FUNCTION - Post Operations
apiVersion: function/v1
kind: Function
metadata:
  name: post-operations-function
spec:
  description: post crud
  language: javascript
  timeout: 60
  environment:
    - name: LIKED_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: liked-post-bucket
    - name: NOTIFICATION_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: notification-bucket
    - name: COMMENTS_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: comment-bucket
    - name: NO_DEVKIT_DATABASE_WARNING
      value: "TRUE"
    - name: POSTS_BUCKET
      valueFrom:
        resourceFieldRef:
          schemaName: post-bucket
  dependency:
    - name: "@spica-devkit/database"
      version: ^0.9.8
  title: Post Operations
  code: ./function/post-operations-function.js
  runtime:
    name: Node
    language: Javascript
---
# FUNCTION - Notification On Message
apiVersion: function/v1
kind: Function
metadata:
  name: notification-on-message-function
spec:
  description: Sends a notification for every message
  language: javascript
  timeout: 83
  environment:
    - name: CHATS_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: chat-bucket
    - name: USERS_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: user-bucket
    - name: NOTIFICATIONS_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: notification-bucket
    - name: NO_DEVKIT_DATABASE_WARNING
      value: "TRUE"
  dependency:
    - name: "@spica-devkit/database"
      version: ^0.9.8
  title: Notification On Message
  code: ./function/notification-on-message-function.js
  runtime:
    name: Node
    language: Javascript
---
# FUNCTION - Notification Gateway
apiVersion: function/v1
kind: Function
metadata:
  name: notification-gateway-function
spec:
  description: Sends notification to tagged user
  language: javascript
  timeout: 23
  environment:
    - name: NOTIFICATIONS_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: notification-bucket
    - name: USERS_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: user-bucket
    - name: POSTS_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: post-bucket
    - name: ACTIVITIES_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: activity-bucket
    - name: NO_DEVKIT_DATABASE_WARNING
      value: "TRUE"
    - name: HASHTAGS_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: hashtag-bucket
  dependency:
    - name: "@spica-devkit/database"
      version: ^0.9.8
  title: Notification Gateway
  code: ./function/notification-gateway-function.js
  runtime:
    name: Node
    language: Javascript
---
# FUNCTION - User Online & Share Response
apiVersion: function/v1
kind: Function
metadata:
  name: user-online-&-share-response-function
spec:
  description: Sets user online in user bucket and chat bucket
  language: javascript
  timeout: 22
  environment:
    - name: USERS_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: user-bucket
    - name: CHATS_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: chat-bucket
    - name: IDENTITIY_SECRET_KEY
      valueFrom:
        resourceFieldRef:
          apiKeyName: identity-apikey
    - name: NO_DEVKIT_DATABASE_WARNING
      value: "TRUE"
  dependency:
    - name: "@spica-devkit/database"
      version: ^0.9.8
    - name: "@spica-devkit/identity"
      version: ^0.9.8
    - name: cheerio
      version: ^0.22.0
    - name: node-fetch
      version: ^2.6.1
  title: User Online & Share Response
  code: ./function/user-online-&-share-response-function.js
  runtime:
    name: Node
    language: Javascript
---
# FUNCTION - Name Change Operations
apiVersion: function/v1
kind: Function
metadata:
  name: name-change-operations-function
spec:
  description: Set
  language: javascript
  timeout: 62
  environment:
    - name: NO_DEVKIT_DATABASE_WARNING
      value: "TRUE"
    - name: POST_BUCKET
      valueFrom:
        resourceFieldRef:
          schemaName: post-bucket
    - name: LIKED_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: liked-bucket
    - name: ACTIVITIES_BUCKET_ID
      valueFrom:
        resourceFieldRef:
          schemaName: activity-bucket
    - name: IDENTITY_APIKEY
      valueFrom:
        resourceFieldRef:
          apiKeyName: identity-apikey
  dependency:
    - name: "@spica-devkit/database"
      version: ^0.9.8
    - name: "@spica-devkit/identity"
      version: ^0.9.11
  title: Name Change Operations
  code: ./function/name-change-operations-function.js
  runtime:
    name: Node
    language: Javascript
---
# TRIGGER - explorePosts
apiVersion: function/v1
kind: Trigger
metadata:
  name: explorePosts
spec:
  type: http
  active: true
  name: explorePosts
  func: exploring-facade-function
  httpOptions:
    method: Get
    path: /getExplorePosts
---
# TRIGGER - trendingPosts
apiVersion: function/v1
kind: Trigger
metadata:
  name: trendingPosts
spec:
  type: http
  active: true
  name: trendingPosts
  func: exploring-facade-function
  httpOptions:
    method: Get
    path: /getTrendingPosts
---
# TRIGGER - exploreUsers
apiVersion: function/v1
kind: Trigger
metadata:
  name: exploreUsers
spec:
  type: http
  active: true
  name: exploreUsers
  func: exploring-facade-function
  httpOptions:
    method: Get
    path: /getExploreUsers
---
# TRIGGER - getClassifiedPosts
apiVersion: function/v1
kind: Trigger
metadata:
  name: getClassifiedPosts
spec:
  type: http
  active: true
  name: getClassifiedPosts
  func: exploring-facade-function
  httpOptions:
    method: Get
    path: /getClassifiedPosts
---
# TRIGGER - default
apiVersion: function/v1
kind: Trigger
metadata:
  name: default
spec:
  active: true
  type: database
  batch:
    deadline: 55
    limit: 9007199254740991
  name: default
  func: firebase-push-notification-function
  databaseOptions:
    collection:
      resourceFieldRef:
        schemaName: firebase-notification-bucket
    type: INSERT
---
# TRIGGER - default
apiVersion: function/v1
kind: Trigger
metadata:
  name: default
spec:
  type: http
  active: true
  name: default
  func: authorization-function
  httpOptions:
    method: Post
    path: /login
---
# TRIGGER - deleteAccount
apiVersion: function/v1
kind: Trigger
metadata:
  name: deleteAccount
spec:
  type: http
  active: true
  name: deleteAccount
  func: authorization-function
  httpOptions:
    method: Get
    path: /deleteAccount
---
# TRIGGER - default
apiVersion: function/v1
kind: Trigger
metadata:
  name: default
spec:
  type: schedule
  active: true
  batch:
    deadline: 57
    limit: 9007199254740991
  name: default
  func: sendnotification-function
  scheduleOptions:
    timezone: Europe/Istanbul
    cronSpec: "* * * * *"
---
# TRIGGER - deletePost
apiVersion: function/v1
kind: Trigger
metadata:
  name: deletePost
spec:
  type: bucket
  active: true
  batch:
    deadline: 55
    limit: 9007199254740991
  name: deletePost
  func: post-operations-function
  bucketOptions:
    bucket:
      resourceFieldRef:
        schemaName: post-bucket
    type: DELETE
---
# TRIGGER - decreaseLikeCount
apiVersion: function/v1
kind: Trigger
metadata:
  name: decreaseLikeCount
spec:
  type: bucket
  active: true
  batch:
    deadline: 55
    limit: 9007199254740991
  name: decreaseLikeCount
  func: post-operations-function
  bucketOptions:
    bucket:
      resourceFieldRef:
        schemaName: liked-post-bucket
    type: DELETE
---
# TRIGGER - increaseLikeCount
apiVersion: function/v1
kind: Trigger
metadata:
  name: increaseLikeCount
spec:
  type: database
  active: true
  batch:
    deadline: 55
    limit: 9007199254740991
  name: increaseLikeCount
  func: post-operations-function
  databaseOptions:
    collection:
      resourceFieldRef:
        schemaName: liked-post-bucket
    type: INSERT
---
# TRIGGER - decreaseCommentCount
apiVersion: function/v1
kind: Trigger
metadata:
  name: decreaseCommentCount
spec:
  type: bucket
  active: true
  batch:
    deadline: 55
    limit: 9007199254740991
  name: decreaseCommentCount
  func: post-operations-function
  bucketOptions:
    bucket:
      resourceFieldRef:
        schemaName: comment-bucket
    type: DELETE
---
# TRIGGER - increaseCommentCount
apiVersion: function/v1
kind: Trigger
metadata:
  name: increaseCommentCount
spec:
  type: database
  active: true
  batch:
    deadline: 55
    limit: 9007199254740991
  name: increaseCommentCount
  func: post-operations-function
  databaseOptions:
    collection:
      resourceFieldRef:
        schemaName: comment-bucket
    type: INSERT
---
# TRIGGER - default
apiVersion: function/v1
kind: Trigger
metadata:
  name: default
spec:
  type: database
  active: true
  batch:
    deadline: 80
    limit: 9007199254740991
  name: default
  func: notification-on-message-function
  databaseOptions:
    collection:
      resourceFieldRef:
        schemaName: comment-bucket
    type: INSERT
---
# TRIGGER - sendPNTaggedPeopleOnPost
apiVersion: function/v1
kind: Trigger
metadata:
  name: sendPNTaggedPeopleOnPost
spec:
  type: database
  active: true
  name: sendPNTaggedPeopleOnPost
  func: notification-gateway-function
  databaseOptions:
    collection:
      resourceFieldRef:
        schemaName: post-bucket
    type: INSERT
---
# TRIGGER - notificationsOnFollowUser
apiVersion: function/v1
kind: Trigger
metadata:
  name: notificationsOnFollowUser
spec:
  type: database
  active: true
  name: notificationsOnFollowUser
  func: notification-gateway-function
  databaseOptions:
    collection:
      resourceFieldRef:
        schemaName: follower-&-following-bucket
    type: INSERT
---
# TRIGGER - notificationsOnCommentPost
apiVersion: function/v1
kind: Trigger
metadata:
  name: notificationsOnCommentPost
spec:
  type: database
  active: true
  name: notificationsOnCommentPost
  func: notification-gateway-function
  databaseOptions:
    collection:
      resourceFieldRef:
        schemaName: comment-bucket
    type: INSERT
---
# TRIGGER - notificationsOnLikedPost
apiVersion: function/v1
kind: Trigger
metadata:
  name: notificationsOnLikedPost
spec:
  type: database
  active: true
  name: notificationsOnLikedPost
  func: notification-gateway-function
  databaseOptions:
    collection: 
      resourceFieldRef:
        schemaName: liked-bucket
    type: INSERT
---
# TRIGGER - dailyInactiveUserDigest
apiVersion: function/v1
kind: Trigger
metadata:
  name: dailyInactiveUserDigest
spec:
  type: schedule
  active: true
  name: dailyInactiveUserDigest
  func: notification-gateway-function
  scheduleOptions:
    timezone: Europe/Istanbul
    cronSpec: "0 * * * *"
---
# TRIGGER - notificationsOnWaitingRequest
apiVersion: function/v1
kind: Trigger
metadata:
  name: notificationsOnWaitingRequest
spec:
  type: database
  active: true
  name: notificationsOnWaitingRequest
  func: notification-gateway-function
  databaseOptions:
    collection: 
      resourceFieldRef:
        schemaName: waiting-request-bucket
    type: INSERT
---
# TRIGGER - updatePost
apiVersion: function/v1
kind: Trigger
metadata:
  name: updatePost
spec:
  type: bucket
  active: true
  name: updatePost
  func: notification-gateway-function
  bucketOptions:
    bucket:
      resourceFieldRef:
        schemaName: post-bucket
    type: UPDATE
---
# TRIGGER - default
apiVersion: function/v1
kind: Trigger
metadata:
  name: default
spec:
  type: http
  active: true
  batch:
    deadline: 20
    limit: 9007199254740991
  name: default
  func: user-online-&-share-response-function
  httpOptions:
    method: Post
    path: /online
---
# TRIGGER - getSharedData
apiVersion: function/v1
kind: Trigger
metadata:
  name: getSharedData
spec:
  type: http
  active: true
  batch:
    deadline: 20
    limit: 9007199254740991
  name: getSharedData
  func: user-online-&-share-response-function
  httpOptions:
    method: Get
    path: /getSharedData
---
# TRIGGER - onUserNameChanged
apiVersion: function/v1
kind: Trigger
metadata:
  name: onUserNameChanged
spec:
  type: bucket
  active: true
  name: onUserNameChanged
  func: name-change-operations-function
  bucketOptions:
    bucket:
      resourceFieldRef:
        schemaName: user-bucket
    type: UPDATE
---
# TRIGGER - blockUser
apiVersion: function/v1
kind: Trigger
metadata:
  name: blockUser
spec:
  type: bucket
  active: true
  name: blockUser
  func: name-change-operations-function
  bucketOptions:
    bucket:
      resourceFieldRef:
        schemaName: blocked-user-bucket
    type: INSERT
